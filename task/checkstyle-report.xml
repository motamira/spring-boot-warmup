<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
  "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
  "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<module name="Checker">
  <property name="charset" value="UTF-8"/>

  <property name="severity" value="warning"/>

  <property name="fileExtensions" value="java, properties, xml"/>

  <module name="NewlineAtEndOfFile">
    <property name="severity" value="error"/>
  </module>

  <module name="FileTabCharacter">
    <property name="eachLine" value="true"/>
    <property name="severity" value="error"/>
  </module>

  <module name="TreeWalker">

    <!-- Java Docs -->
    <module name="JavadocMethod">
      <property name="severity" value="error"/>
      <property name="scope" value="public"/>
      <property name="minLineCount" value="2"/>
      <property name="allowedAnnotations" value="Override, Test, Bean"/>
      <property name="allowThrowsTagsForSubclasses" value="true"/>
    </module>

    <module name="SingleLineJavadoc">
      <property name="severity" value="error"/>
      <property name="ignoreInlineTags" value="false"/>
    </module>

    <module name="JavadocType">
      <property name="severity" value="error"/>
    </module>

    <module name="JavadocStyle">
      <property name="severity" value="error"/>
    </module>

    <module name="JavadocParagraph">
      <property name="severity" value="error"/>
    </module>

    <module name="JavadocTagContinuationIndentation">
      <property name="severity" value="error"/>
    </module>

    <!-- Imports -->
    <module name="AvoidStarImport">
      <property name="severity" value="error"/>
    </module>

    <module name="IllegalImport">
      <property name="severity" value="error"/>
    </module>

    <module name="RedundantImport">
      <property name="severity" value="error"/>
    </module>

    <module name="UnusedImports">
      <property name="severity" value="error"/>
      <property name="processJavadoc" value="false"/>
    </module>

    <module name="CustomImportOrder">
      <property name="severity" value="error"/>
      <property name="sortImportsInGroupAlphabetically" value="true"/>
      <property name="separateLineBetweenGroups" value="true"/>
      <property name="customImportOrderRules" value="STATIC###THIRD_PARTY_PACKAGE"/>
    </module>

    <!-- Right Margin Size -->
    <module name="LineLength">
      <property name="severity" value="error"/>
      <property name="max" value="140"/>
      <property name="ignorePattern"
        value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
    </module>

    <!-- Indentation -->
    <module name="Indentation">
      <property name="severity" value="error"/>
      <property name="basicOffset" value="4"/>
      <property name="braceAdjustment" value="0"/>
      <property name="caseIndent" value="4"/>
      <property name="throwsIndent" value="4"/>
      <property name="lineWrappingIndentation" value="4"/>
      <property name="arrayInitIndent" value="4"/>
    </module>

    <module name="SeparatorWrap">
      <property name="severity" value="error"/>
      <property name="tokens" value="DOT"/>
      <property name="option" value="nl"/>
    </module>

    <module name="SeparatorWrap">
      <property name="severity" value="error"/>
      <property name="tokens" value="COMMA"/>
      <property name="option" value="EOL"/>
    </module>

    <!-- Escaped Char -->
    <module name="AvoidEscapedUnicodeCharacters">
      <property name="severity" value="error"/>
      <property name="allowEscapesForControlCharacters" value="true"/>
      <property name="allowByTailComment" value="true"/>
      <property name="allowNonPrintableEscapes" value="true"/>
    </module>

    <!-- Checks for whitespace -->
    <module name="NoLineWrap"/>

    <module name="EmptyLineSeparator">
      <property name="allowNoEmptyLineBetweenFields" value="true"/>
    </module>

    <!-- Checks for Annotations comments -->
    <module name="AnnotationLocation">
      <property name="tokens"
        value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF"/>
    </module>

    <module name="AnnotationLocation">
      <property name="tokens" value="VARIABLE_DEF"/>
      <property name="allowSamelineMultipleAnnotations" value="true"/>
    </module>

    <!-- Checks for Naming Conventions -->
    <module name="ConstantName"/>

    <module name="AbbreviationAsWordInName">
      <property name="ignoreFinal" value="false"/>
      <property name="allowedAbbreviationLength" value="1"/>
    </module>

    <module name="LocalFinalVariableName"/>

    <module name="MethodName">
      <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>
      <message key="name.invalidPattern"
        value="Method name ''{0}'' must match pattern ''{1}''."/>
    </module>

    <module name="StaticVariableName"/>

    <module name="PackageName">
      <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
      <message key="name.invalidPattern"
        value="Package name ''{0}'' must match pattern ''{1}''."/>
    </module>

    <module name="TypeName">
      <message key="name.invalidPattern"
        value="Type name ''{0}'' must match pattern ''{1}''."/>
    </module>

    <module name="MemberName">
      <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
      <message key="name.invalidPattern"
        value="Member name ''{0}'' must match pattern ''{1}''."/>
    </module>

    <module name="ParameterName">
      <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
      <message key="name.invalidPattern"
        value="Parameter name ''{0}'' must match pattern ''{1}''."/>
    </module>

    <module name="LocalVariableName">
      <property name="tokens" value="VARIABLE_DEF"/>
      <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
      <property name="allowOneCharVarInForLoop" value="true"/>
      <message key="name.invalidPattern"
        value="Local variable name ''{0}'' must match pattern ''{1}''."/>
    </module>

    <module name="ClassTypeParameterName">
      <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
      <message key="name.invalidPattern"
        value="Class type name ''{0}'' must match pattern ''{1}''."/>
    </module>

    <module name="MethodTypeParameterName">
      <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
      <message key="name.invalidPattern"
        value="Method type name ''{0}'' must match pattern ''{1}''."/>
    </module>

    <module name="InterfaceTypeParameterName">
      <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
      <message key="name.invalidPattern"
        value="Interface type name ''{0}'' must match pattern ''{1}''."/>
    </module>

    <module name="MethodLength"/>

    <module name="ParameterNumber">
      <property name="max" value="3"/>
    </module>

    <!-- Checks for whitespace -->
    <module name="EmptyForIteratorPad"/>

    <module name="GenericWhitespace">
      <message key="ws.followed"
        value="GenericWhitespace ''{0}'' is followed by whitespace."/>
      <message key="ws.preceded"
        value="GenericWhitespace ''{0}'' is preceded with whitespace."/>
      <message key="ws.illegalFollow"
        value="GenericWhitespace ''{0}'' should followed by whitespace."/>
      <message key="ws.notPreceded"
        value="GenericWhitespace ''{0}'' is not preceded with whitespace."/>
    </module>

    <module name="MethodParamPad"/>
    <module name="NoWhitespaceAfter"/>
    <module name="NoWhitespaceBefore"/>

    <module name="OperatorWrap">
      <property name="option" value="NL"/>
      <property name="tokens"
        value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR "/>
    </module>

    <module name="ParenPad"/>
    <module name="TypecastParenPad"/>
    <module name="WhitespaceAfter"/>

    <module name="WhitespaceAround">
      <property name="allowEmptyConstructors" value="true"/>
      <property name="allowEmptyMethods" value="true"/>
      <property name="allowEmptyTypes" value="true"/>
      <property name="allowEmptyLoops" value="true"/>
      <message key="ws.notFollowed"
        value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)"/>
      <message key="ws.notPreceded"
        value="WhitespaceAround: ''{0}'' is not preceded with whitespace."/>
    </module>

    <!-- Metrics Checks -->
    <module name="CyclomaticComplexity"/>

    <!-- Modifier Checks -->
    <module name="ModifierOrder"/>
    <module name="RedundantModifier"/>

    <!-- Checks for blocks. You know, those {}'s -->
    <module name="AvoidNestedBlocks"/>
    <module name="NeedBraces"/>
    <module name="EmptyCatchBlock"/>

    <module name="EmptyBlock">
      <property name="option" value="TEXT"/>
      <property name="tokens"
        value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH"/>
    </module>

    <module name="LeftCurly">
      <property name="maxLineLength" value="100"/>
    </module>

    <module name="RightCurly">
      <property name="option" value="alone"/>
      <property name="tokens"
        value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT"/>
    </module>

    <!-- Checks for common coding problems -->
    <module name="AvoidInlineConditionals"/>
    <module name="EmptyStatement"/>
    <module name="EqualsHashCode"/>
    <module name="HiddenField"/>
    <module name="IllegalInstantiation"/>
    <module name="InnerAssignment"/>
    <module name="MagicNumber"/>
    <module name="MissingSwitchDefault"/>
    <module name="SimplifyBooleanExpression"/>
    <module name="SimplifyBooleanReturn"/>
    <module name="OverloadMethodsDeclarationOrder"/>
    <module name="VariableDeclarationUsageDistance"/>
    <module name="NoFinalizer"/>
    <module name="OneStatementPerLine"/>
    <module name="MultipleVariableDeclarations"/>
    <module name="FallThrough"/>

    <module name="IllegalTokenText">
      <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
      <property name="format"
        value="\\u00(08|09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>
      <property name="message" value="Avoid using corresponding octal or Unicode escape."/>
    </module>

    <!-- Miscellaneous other checks. -->
    <module name="ArrayTypeStyle"/>
    <module name="FinalParameters"/>
    <module name="TodoComment"/>
    <module name="UpperEll"/>
    <module name="CommentsIndentation"/>
    <module name="OuterTypeFilename"/>

    <!-- Checks for class design -->
    <module name="DesignForExtension"/>
    <module name="FinalClass"/>
    <module name="HideUtilityClassConstructor"/>
    <module name="InterfaceIsType"/>
    <module name="VisibilityModifier"/>
    <module name="OneTopLevelClass"/>

  </module>
</module>